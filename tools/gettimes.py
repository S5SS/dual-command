#!/usr/bin/env python3
# Modified binary regex searcher
# Compiles a dictionary of unit/module names (lowercase) to build times
import sys
import re
import os
import os.path

def fileFind(path, pattern):
	try:
		with open(path, 'rb') as f:
			content = str(f.read(), encoding='ascii')
	except:
		print('The file "%s" could not be found/opened.' % path)

	try:
		return re.search(pattern, content).group(1)
	except:
		return None

def main(*args):
	results = {}
	pattern = re.compile(r'(?:buildTime|timeToBuild)\s*=\s*(?:getShipNum\(NewShipType,\s*"buildTime",\s*)?(\d+)')

	# Search all files
	# The last directory specified has the greatest precedence
	# The greatest precedence file is used to determine build time
	for root_dir in args[1:]:
		for root, subdirs, subfiles in os.walk(root_dir):
			for filename in subfiles:
				if filename[-5:].lower() in ('.ship', '.subs'):
					filepath = os.path.join(root, filename)
					name = re.search(re.compile(r'[^\\]+(?=\.ship|\.subs)'), filepath).group()
					name = name.lower()
					results[name] = fileFind(filepath, pattern)

	# Show results to user
	print('-- Used by 2.4 to set build times')
	print('-- Generated by gettimes.py')
	print('buildtimes = {')
	for name, result in results.items():
		if result == None: continue
		print('\t["%s"] = "%3.0d",' % (name, int(result)))

	print('}')
	
	return 0


if __name__ == '__main__':
	rc = main(*sys.argv)
	sys.exit(rc)
